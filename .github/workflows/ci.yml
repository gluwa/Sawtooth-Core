name: ci
on:
  push:
    branches:
      - main
      - dev
  pull_request:

env:
  ISOLATION_ID: ${{ github.run_id }}
  DISTRO: bionic
  SAWTOOTH_CORE: ${{ github.workspace }}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        # needed for `git describe --dirty` when building docker images
        fetch-depth: 0

    - name: Docker version
      run: |
        docker --version
        docker-compose --version

    - name: Build Lint Requirements
      run: |
        docker-compose -f docker/compose/run-lint.yaml build

    - name: Run Lint
      run: |
        run-parts --verbose --regex '.*' ./gluwa/tests/lint

        # Disabled because of CRB-213
        # docker-compose -f docker/compose/run-lint.yaml up --abort-on-container-exit --exit-code-from lint-python lint-python
        docker-compose -f docker/compose/run-lint.yaml up --abort-on-container-exit --exit-code-from lint-rust lint-rust
        docker-compose -f docker/compose/run-lint.yaml up --abort-on-container-exit --exit-code-from lint-validator lint-validator


  bandit:
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v2
      with:
        # needed for `git describe --dirty` when building docker images
        fetch-depth: 0

    - name: Docker version
      run: |
        docker --version
        docker-compose --version

    - name: Build Test Dependencies
      run: |
        docker build -f docker/bandit -t bandit:$ISOLATION_ID .

    - name: Run Bandit
      run: |
        docker run --rm -v $(pwd):/project/sawtooth-core bandit:$ISOLATION_ID run_bandit

    - name: Upload report from Bandit
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: bandit.html
        path: build/bandit.html

  test-sawtooth-core:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        # needed for `git describe --dirty` when building docker images
        fetch-depth: 0

    - name: Docker version
      run: |
        docker --version
        docker-compose --version

    - name: Build Test Dependencies
      run: |
        python --version
        pip install yq

        # build services one by one to avoid running out of disk space in GitHub
        function buildImages() {
            YAML_FILE=$1

            for SERVICE in $(cat $YAML_FILE | ~/.local/bin/yq -r '.services | keys' -y | sed 's/- //'); do
                echo "INFO: Will build $SERVICE"

                docker-compose -f $YAML_FILE build $SERVICE

                # remove intermediary images
                for IMAGE in $(docker images | grep "<none>" | tr -s ' ' | cut -f3 -d ' '); do
                    echo "INFO: Removing intermediary image $IMAGE"
                    docker rmi $IMAGE
                done
            done
        }

        buildImages "docker/compose/sawtooth-build.yaml"

        # bring the dependencies up & down b/c they have a shared directory
        echo "INFO: Up & Down"
        docker-compose -f docker/compose/sawtooth-build.yaml up
        docker-compose -f docker/compose/sawtooth-build.yaml down

        echo "******************************"
        echo
        echo
        echo "INFO: Docker images under test"
        echo
        docker images
        echo
        echo
        echo "******************************"

    - name: Run Tests
      run: |
        # note: deployment tests need the runtime containers
        # while the other tests build with a -local suffix
        INSTALL_TYPE="" ./bin/run_tests


  build-validator-and-rest-api-containers:
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      matrix:
        container: ["rest-api", "validator"]

    steps:
    - uses: actions/checkout@v2

    - name: Build ${{ matrix.container }}
      run: |
        docker-compose -f docker-compose-installed.yaml build ${{ matrix.toolchain }}

        # NOTE: this will not work with a matrix build
        # these are runtime dependencies, should not be needed for running
        # the automated testsuite
        # buildImages "docker-compose-installed.yaml"

        # Grafana, InfluxDB & Apache proxy
        # probably not needed
        # buildImages "docker/compose/external.yaml"

    # - name: Run Tests
    #  run: |
    #    INSTALL_TYPE="" ./bin/run_tests -m deployment
